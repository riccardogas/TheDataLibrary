// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace TheDataLibrary.DBModels
{
    public partial class TestContext : DbContext
    {
        public TestContext()
        {
        }

        public TestContext(DbContextOptions<TestContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Pizza> Pizzas { get; set; }
        public virtual DbSet<Pizzastopping> Pizzastoppings { get; set; }
        public virtual DbSet<Topping> Toppings { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Italian_Italy.1252");

            modelBuilder.Entity<Pizza>(entity =>
            {
                entity.HasKey(e => e.IdPizzas)
                    .HasName("pizzas_pkey");

                entity.ToTable("pizzas");

                entity.Property(e => e.IdPizzas)
                    .HasColumnName("id_pizzas")
                    .UseIdentityAlwaysColumn();

                entity.Property(e => e.Descrizione)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("descrizione");
            });

            modelBuilder.Entity<Pizzastopping>(entity =>
            {
                entity.HasKey(e => e.IdPizzastoppings)
                    .HasName("pizzastoppings_pkey");

                entity.ToTable("pizzastoppings");

                entity.HasIndex(e => e.IdPizzas, "fk_Pizzas_PizzasToppings");

                entity.HasIndex(e => e.IdToppings, "fki_fk_Pizzas_Toppings");

                entity.HasIndex(e => new { e.IdToppings, e.IdPizzas }, "pizzastoppings_id_toppings_id_pizzas_key")
                    .IsUnique();

                entity.Property(e => e.IdPizzastoppings)
                    .HasColumnName("id_pizzastoppings")
                    .UseIdentityAlwaysColumn();

                entity.Property(e => e.IdPizzas).HasColumnName("id_pizzas");

                entity.Property(e => e.IdToppings).HasColumnName("id_toppings");

                entity.HasOne(d => d.IdPizzasNavigation)
                    .WithMany(p => p.Pizzastoppings)
                    .HasForeignKey(d => d.IdPizzas)
                    .HasConstraintName("pizzastoppings_id_pizzas_fkey");

                entity.HasOne(d => d.IdToppingsNavigation)
                    .WithMany(p => p.Pizzastoppings)
                    .HasForeignKey(d => d.IdToppings)
                    .HasConstraintName("pizzastoppings_id_toppings_fkey");
            });

            modelBuilder.Entity<Topping>(entity =>
            {
                entity.HasKey(e => e.IdToppings)
                    .HasName("toppings_pkey");

                entity.ToTable("toppings");

                entity.Property(e => e.IdToppings)
                    .HasColumnName("id_toppings")
                    .UseIdentityAlwaysColumn();

                entity.Property(e => e.Descrizione)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("descrizione");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}